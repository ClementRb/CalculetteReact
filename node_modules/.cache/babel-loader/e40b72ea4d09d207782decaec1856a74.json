{"ast":null,"code":"import _classCallCheck from \"/home/alexis/Dropbox/Cours B3/React/calculatrice/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/alexis/Dropbox/Cours B3/React/calculatrice/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/alexis/Dropbox/Cours B3/React/calculatrice/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/alexis/Dropbox/Cours B3/React/calculatrice/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/alexis/Dropbox/Cours B3/React/calculatrice/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/alexis/Dropbox/Cours B3/React/calculatrice/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/alexis/Dropbox/Cours B3/React/calculatrice/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css'; // Functional Component\n\nvar DisplayWindow = function DisplayWindow(props) {\n  return React.createElement(\"input\", {\n    type: \"text\",\n    value: props.expression,\n    disabled: \"true\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  });\n};\n\nvar Button =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Button, _React$Component);\n\n  function Button() {\n    var _this;\n\n    _classCallCheck(this, Button);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Button).call(this));\n    _this.onClick = _this.onClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Button, [{\n    key: \"onClick\",\n    value: function onClick() {\n      this.props.onKeyPressed(this.props.text);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"button\", {\n        onClick: this.onClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, this.props.text);\n    }\n  }]);\n\n  return Button;\n}(React.Component);\n\nvar Calculator =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(Calculator, _React$Component2);\n\n  function Calculator() {\n    var _this2;\n\n    _classCallCheck(this, Calculator);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(Calculator).call(this));\n    _this2.state = {\n      expression: '0'\n    };\n    _this2.onKeyPressed = _this2.onKeyPressed.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    _this2.onEvaluatePressed = _this2.onEvaluatePressed.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    _this2.onDeletePressed = _this2.onDeletePressed.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    return _this2;\n  }\n\n  _createClass(Calculator, [{\n    key: \"onKeyPressed\",\n    value: function onKeyPressed(text) {\n      this.setState(function (prev) {\n        return {\n          expression: prev.expression + text\n        };\n      });\n    }\n  }, {\n    key: \"onEvaluatePressed\",\n    value: function onEvaluatePressed() {\n      var result = eval(this.state.expression);\n      this.setState({\n        expression: result.toString()\n      });\n    }\n  }, {\n    key: \"onDeletePressed\",\n    value: function onDeletePressed() {\n      this.setState(function (prev) {\n        return {\n          expression: prev.expression.length <= 1 ? '0' : prev.expression.slice(0, -1)\n        };\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var numberKeys = [];\n\n      for (var i = 0; i < 10; i++) {\n        numberKeys.push(React.createElement(Button, {\n          text: i,\n          onKeyPressed: this.onKeyPressed,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }));\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(DisplayWindow, {\n        expression: this.state.expression,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), numberKeys, React.createElement(Button, {\n        text: \"+\",\n        onKeyPressed: this.onKeyPressed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), React.createElement(Button, {\n        text: \"-\",\n        onKeyPressed: this.onKeyPressed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), React.createElement(Button, {\n        text: \"*\",\n        onKeyPressed: this.onKeyPressed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(Button, {\n        text: \"/\",\n        onKeyPressed: this.onKeyPressed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), React.createElement(Button, {\n        text: \"C\",\n        onKeyPressed: this.onDeletePressed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.onEvaluatePressed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"=\"));\n    }\n  }]);\n\n  return Calculator;\n}(React.Component);\n/* const DisplayWindow = (props) => (<input type=\"text\" name=\"calc_resultat\" value={this.props.expression}  id=\"calc_resultat\" className=\"calc_resultat form-control\" readOnly/>);\n\nclass Home extends React.Component {\n\n  constructor() {\n    super();\n      \n    this.onClick = this.onClick.bind(this);\n\n    this.state = {\n      expression: '0'\n    }\n\n    this.onKeyPressed = this.onKeyPressed.bind(this);\n    this.onEvaluatePressed = this.onEvaluatePressed.bind(this);\n    this.onDeletePressed = this.onDeletePressed.bind(this);\n  }\n  \n  onKeyPressed(text) {\n    this.setState((prev) => ({expression: prev.expression + text}));\n  }\n  \n  onEvaluatePressed() {\n    const result = eval(this.state.expression);\n    this.setState({expression: result.toString()});\n  }\n  \n  onDeletePressed() {\n    this.setState((prev) => ({\n      expression: prev.expression.length <= 1 ? '0' : prev.expression.slice(0, -1)}));\n  }\n\n\n    \n  onClick() {\n    this.props.onKeyPressed(this.props.text);\n  }\n\n  render(){\n\n    return(\n     <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-md-12\">\n        <h1 id=\"title\">Calculatrice:</h1>\n        </div>\n        <div className=\"col-md-4\"></div>\n        <div className=\"col-md-4 center-block\">\n          <table className=\"calculatrice\" id=\"calc\">\n            <tbody>\n              <tr>\n                <td colSpan=\"4\" className=\"calc_td_resultat\">\n                <DisplayWindow expression={this.state.expression}/>\n                </td>\n              </tr>\n              <tr>\n                <td className=\"calc_td_btn\" id=\"AC\">\n                  <button className=\"calc_btn btn btn-dark\" text=\"AC\" onClick={this.onClick}>AC</button>\n                </td>\n                <td className=\"calc_td_btn\">\n                  <button className=\"calc_btn btn btn-dark\" id=\"percent\" text=\"%\" onClick={() => this.percent()}>%</button>\n                </td>\n                <td className=\"calc_td_btn\">\n                <button className=\"calc_btn btn btn-dark\" id=\"divide\" text=\"/\" onClick={() => this.divide()}>/</button>\n                </td>\n                <td className=\"calc_td_btn\">\n                <button className=\"calc_btn btn btn-dark\" id=\"null\" onClick={() => this.null()}>:/</button>\n                </td>\n              </tr>\n              <tr>\n                <td className=\"calc_td_btn\">\n                <button className=\"calc_btn btn btn-dark\" id=\"seven\" text=\"7\" onClick={this.onClick}>7</button>\n                </td>\n                  <td className=\"calc_td_btn\">\n                  <button className=\"calc_btn btn btn-dark\" id=\"eight\" text=\"8\" onClick={this.onClick}>8</button>\n                  </td>\n                  <td className=\"calc_td_btn\">\n                  <button className=\"calc_btn btn btn-dark\" id=\"nine\" text=\"9\" onClick={this.onClick}>9</button>\n                  </td>\n                  <td className=\"calc_td_btn\">\n                  <button className=\"calc_btn btn btn-dark\" id=\"plus\" text=\"+\" onClick={this.onClick}>+</button>\n                  </td>\n              </tr>\n              <tr>\n                <td className=\"calc_td_btn\">\n                <button className=\"calc_btn btn btn-dark\" id=\"four\" text=\"4\" onClick={this.onClick}>4</button>\n                </td>\n                <td className=\"calc_td_btn\">\n                <button className=\"calc_btn btn btn-dark\" id=\"five\" text=\"5\" onClick={this.onClick}>5</button>\n                </td>\n                <td className=\"calc_td_btn\">\n                <button className=\"calc_btn btn btn-dark\" id=\"six\" text=\"6\" onClick={this.onClick}>6</button>\n                </td>\n                <td className=\"calc_td_btn\">\n                <button className=\"calc_btn btn btn-dark\"id=\"minus\" text=\"-\" onClick={this.onClick}>-</button>\n                </td>\n              </tr>\n              <tr>\n              <td className=\"calc_td_btn\">\n                <button className=\"calc_btn btn btn-dark\" id=\"one\" text=\"1\" onClick={this.onClick}>1</button>\n              </td>\n                <td className=\"calc_td_btn\">\n                  <button className=\"calc_btn btn btn-dark\" id=\"two\" text=\"2\" onClick={this.onClick}>2</button>\n                </td>\n                <td className=\"calc_td_btn\">\n                  <button className=\"calc_btn btn btn-dark\" id=\"three\" text=\"3\" onClick={this.onClick}>3</button>\n                </td>\n                <td className=\"calc_td_btn\">\n                  <button className=\"calc_btn btn btn-dark\" id=\"multiply\" text=\"*\" onClick={() => this.multiply()}>*</button>\n                </td>\n              </tr>\n              <tr>\n                <td className=\"calc_td_btn\">\n                  <button className=\"calc_btn btn btn-dark\" id=\"zero\" text=\"0\" onClick={this.onClick}>0</button>\n                </td>\n                <td className=\"calc_td_btn\">\n                  <button className=\"calc_btn btn btn-dark\" id=\"change\" onClick={this.onClick}>+/-</button>\n                </td>\n                <td className=\"calc_td_btn\">\n                  <button className=\"calc_btn btn btn-dark\" id=\"float\" text=\",\" onClick={this.onClick}>,</button>\n                </td>\n                <td className=\"calc_td_btn\">\n                  <button className=\"calc_btn btn btn-dark\" id=\"equal\" text=\"=\" onClick={this.onClick}>=</button>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n        <div className=\"col-md-4\"></div>\n      </div>\n     </div>\n    )\n  }\n} */\n\n\nexport default Home;\n{\n  /* <input></input>\n             <br/>\n             <button id='btn7' onClick={() => this.seven()}>7</button>\n             <button id='btn8' onClick={() => this.eight()}>8</button>\n             <button id='btn9' onClick={() => this.nine()}>9</button>\n             <button id='btnPlus' onClick={() => this.increment()}>+</button>\n             <br/>\n             <button id='btn4' onClick={() => this.four()}>4</button>\n             <button id='btn5' onClick={() => this.five()}>5</button>\n             <button id='btn6' onClick={() => this.six()}>6</button>\n             <button id='Minus' onClick={() => this.decrement()}>-</button>\n             <br/>\n             <button id ='btn1' onClick={() => this.one()}>1</button>\n             <button id='btn2' onClick={() => this.two()}>2</button>\n             <button id='btn3' onClick={() => this.three()}>3</button>\n             <button id='btnMult' onClick={() => this.multiply()}>x</button>\n             <br/>\n             <button id='btn0' onClick={() => this.zero()}>0</button>\n             <button id='btnEqual' onClick={() => this.equal()}>=</button>\n             <button id='btnDeci' onClick={() => this.decimal()}>.</button>\n             <button id='btnDevi' onClick={() => this.divide()}>/</button>\n             <h1>{this.state.count}</h1> */\n}","map":{"version":3,"sources":["/home/alexis/Dropbox/Cours B3/React/calculatrice/src/App.js"],"names":["React","Component","DisplayWindow","props","expression","Button","onClick","bind","onKeyPressed","text","Calculator","state","onEvaluatePressed","onDeletePressed","setState","prev","result","eval","toString","length","slice","numberKeys","i","push","Home"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\n\n// Functional Component\nconst DisplayWindow = (props) => (<input type='text' value={props.expression} disabled='true'/>);\n\nclass Button extends React.Component {\n  constructor() {\n    super();\n    \n    this.onClick = this.onClick.bind(this);\n  }\n  \n  onClick() {\n    this.props.onKeyPressed(this.props.text);\n  }\n  \n  render() {\n    return <button onClick={this.onClick}>{this.props.text}</button>;\n  }\n}\n\nclass Calculator extends React.Component {\n  constructor () {\n    super();\n    \n    this.state = {\n      expression: '0'\n    }\n    \n    this.onKeyPressed = this.onKeyPressed.bind(this);\n    this.onEvaluatePressed = this.onEvaluatePressed.bind(this);\n    this.onDeletePressed = this.onDeletePressed.bind(this);\n  }\n  \n  onKeyPressed(text) {\n    this.setState((prev) => ({expression: prev.expression + text}));\n  }\n  \n  onEvaluatePressed() {\n    const result = eval(this.state.expression);\n    this.setState({expression: result.toString()});\n  }\n  \n  onDeletePressed() {\n    this.setState((prev) => ({\n      expression: prev.expression.length <= 1 ? '0' : prev.expression.slice(0, -1)}));\n  }\n\n  render() {\n    let numberKeys = [];\n    for(let i =0; i < 10; i++) {\n      numberKeys.push(<Button text={i} onKeyPressed={this.onKeyPressed}/>);\n    }\n    \n    return (\n      <div>\n        <DisplayWindow expression={this.state.expression}/>\n        {numberKeys}\n        <Button text=\"+\" onKeyPressed={this.onKeyPressed}/>\n        <Button text=\"-\" onKeyPressed={this.onKeyPressed}/>\n        <Button text=\"*\" onKeyPressed={this.onKeyPressed}/>\n        <Button text=\"/\" onKeyPressed={this.onKeyPressed}/>\n        <Button text=\"C\" onKeyPressed={this.onDeletePressed}/>\n        <button onClick={this.onEvaluatePressed}>=</button>\n      </div>\n    )\n  }\n}\n\n\n/* const DisplayWindow = (props) => (<input type=\"text\" name=\"calc_resultat\" value={this.props.expression}  id=\"calc_resultat\" className=\"calc_resultat form-control\" readOnly/>);\n\nclass Home extends React.Component {\n\n  constructor() {\n    super();\n      \n    this.onClick = this.onClick.bind(this);\n\n    this.state = {\n      expression: '0'\n    }\n\n    this.onKeyPressed = this.onKeyPressed.bind(this);\n    this.onEvaluatePressed = this.onEvaluatePressed.bind(this);\n    this.onDeletePressed = this.onDeletePressed.bind(this);\n  }\n  \n  onKeyPressed(text) {\n    this.setState((prev) => ({expression: prev.expression + text}));\n  }\n  \n  onEvaluatePressed() {\n    const result = eval(this.state.expression);\n    this.setState({expression: result.toString()});\n  }\n  \n  onDeletePressed() {\n    this.setState((prev) => ({\n      expression: prev.expression.length <= 1 ? '0' : prev.expression.slice(0, -1)}));\n  }\n\n\n    \n  onClick() {\n    this.props.onKeyPressed(this.props.text);\n  }\n\n  render(){\n\n    return(\n     <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-md-12\">\n        <h1 id=\"title\">Calculatrice:</h1>\n        </div>\n        <div className=\"col-md-4\"></div>\n        <div className=\"col-md-4 center-block\">\n          <table className=\"calculatrice\" id=\"calc\">\n            <tbody>\n              <tr>\n                <td colSpan=\"4\" className=\"calc_td_resultat\">\n                <DisplayWindow expression={this.state.expression}/>\n                </td>\n              </tr>\n              <tr>\n                <td className=\"calc_td_btn\" id=\"AC\">\n                  <button className=\"calc_btn btn btn-dark\" text=\"AC\" onClick={this.onClick}>AC</button>\n                </td>\n                <td className=\"calc_td_btn\">\n                  <button className=\"calc_btn btn btn-dark\" id=\"percent\" text=\"%\" onClick={() => this.percent()}>%</button>\n                </td>\n                <td className=\"calc_td_btn\">\n                <button className=\"calc_btn btn btn-dark\" id=\"divide\" text=\"/\" onClick={() => this.divide()}>/</button>\n                </td>\n                <td className=\"calc_td_btn\">\n                <button className=\"calc_btn btn btn-dark\" id=\"null\" onClick={() => this.null()}>:/</button>\n                </td>\n              </tr>\n              <tr>\n                <td className=\"calc_td_btn\">\n                <button className=\"calc_btn btn btn-dark\" id=\"seven\" text=\"7\" onClick={this.onClick}>7</button>\n                </td>\n                  <td className=\"calc_td_btn\">\n                  <button className=\"calc_btn btn btn-dark\" id=\"eight\" text=\"8\" onClick={this.onClick}>8</button>\n                  </td>\n                  <td className=\"calc_td_btn\">\n                  <button className=\"calc_btn btn btn-dark\" id=\"nine\" text=\"9\" onClick={this.onClick}>9</button>\n                  </td>\n                  <td className=\"calc_td_btn\">\n                  <button className=\"calc_btn btn btn-dark\" id=\"plus\" text=\"+\" onClick={this.onClick}>+</button>\n                  </td>\n              </tr>\n              <tr>\n                <td className=\"calc_td_btn\">\n                <button className=\"calc_btn btn btn-dark\" id=\"four\" text=\"4\" onClick={this.onClick}>4</button>\n                </td>\n                <td className=\"calc_td_btn\">\n                <button className=\"calc_btn btn btn-dark\" id=\"five\" text=\"5\" onClick={this.onClick}>5</button>\n                </td>\n                <td className=\"calc_td_btn\">\n                <button className=\"calc_btn btn btn-dark\" id=\"six\" text=\"6\" onClick={this.onClick}>6</button>\n                </td>\n                <td className=\"calc_td_btn\">\n                <button className=\"calc_btn btn btn-dark\"id=\"minus\" text=\"-\" onClick={this.onClick}>-</button>\n                </td>\n              </tr>\n              <tr>\n              <td className=\"calc_td_btn\">\n                <button className=\"calc_btn btn btn-dark\" id=\"one\" text=\"1\" onClick={this.onClick}>1</button>\n              </td>\n                <td className=\"calc_td_btn\">\n                  <button className=\"calc_btn btn btn-dark\" id=\"two\" text=\"2\" onClick={this.onClick}>2</button>\n                </td>\n                <td className=\"calc_td_btn\">\n                  <button className=\"calc_btn btn btn-dark\" id=\"three\" text=\"3\" onClick={this.onClick}>3</button>\n                </td>\n                <td className=\"calc_td_btn\">\n                  <button className=\"calc_btn btn btn-dark\" id=\"multiply\" text=\"*\" onClick={() => this.multiply()}>*</button>\n                </td>\n              </tr>\n              <tr>\n                <td className=\"calc_td_btn\">\n                  <button className=\"calc_btn btn btn-dark\" id=\"zero\" text=\"0\" onClick={this.onClick}>0</button>\n                </td>\n                <td className=\"calc_td_btn\">\n                  <button className=\"calc_btn btn btn-dark\" id=\"change\" onClick={this.onClick}>+/-</button>\n                </td>\n                <td className=\"calc_td_btn\">\n                  <button className=\"calc_btn btn btn-dark\" id=\"float\" text=\",\" onClick={this.onClick}>,</button>\n                </td>\n                <td className=\"calc_td_btn\">\n                  <button className=\"calc_btn btn btn-dark\" id=\"equal\" text=\"=\" onClick={this.onClick}>=</button>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n        <div className=\"col-md-4\"></div>\n      </div>\n     </div>\n    )\n  }\n} */\n\nexport default Home;\n\n{/* <input></input>\n            <br/>\n            <button id='btn7' onClick={() => this.seven()}>7</button>\n            <button id='btn8' onClick={() => this.eight()}>8</button>\n            <button id='btn9' onClick={() => this.nine()}>9</button>\n            <button id='btnPlus' onClick={() => this.increment()}>+</button>\n            <br/>\n            <button id='btn4' onClick={() => this.four()}>4</button>\n            <button id='btn5' onClick={() => this.five()}>5</button>\n            <button id='btn6' onClick={() => this.six()}>6</button>\n            <button id='Minus' onClick={() => this.decrement()}>-</button>\n            <br/>\n            <button id ='btn1' onClick={() => this.one()}>1</button>\n            <button id='btn2' onClick={() => this.two()}>2</button>\n            <button id='btn3' onClick={() => this.three()}>3</button>\n            <button id='btnMult' onClick={() => this.multiply()}>x</button>\n            <br/>\n            <button id='btn0' onClick={() => this.zero()}>0</button>\n            <button id='btnEqual' onClick={() => this.equal()}>=</button>\n            <button id='btnDeci' onClick={() => this.decimal()}>.</button>\n            <button id='btnDevi' onClick={() => this.divide()}>/</button>\n            <h1>{this.state.count}</h1> */}"]},"metadata":{},"sourceType":"module"}